#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

typedef struct {
    int data[MAX_SIZE];
    int top;
} Stack;

// Initialize a stack
void initialize(Stack *s) {
    s->top = -1;
}

// Push an element onto the stack
void push(Stack *s, int value) {
    if (s->top < MAX_SIZE - 1) {
        s->data[++s->top] = value;
    } else {
        printf("Stack overflow!\n");
    }
}

// Pop an element from the stack
int pop(Stack *s) {
    if (s->top >= 0) {
        return s->data[s->top--];
    } else {
        printf("Stack underflow!\n");
        return -1; // Return a sentinel value indicating an error
    }
}

// Get the bottom-most element of the stack
int getBottom(Stack *s) {
    if (s->top >= 0) {
        return s->data[0];
    }
    return -1; // Return a sentinel value indicating an error
}

int main() {
	printf("name : B.sandeep\n");
    Stack stack1, stack2;
    initialize(&stack1);
    initialize(&stack2);

    // Push elements onto the stacks
    push(&stack1, 10);
    push(&stack1, 20);
    push(&stack1, 30);

    push(&stack2, 5);
    push(&stack2, 15);
    push(&stack2, 25);

    // Print the bottom-most and top-most elements of both stacks
    printf("Stack 1: Bottom = %d, Top = %d\n", getBottom(&stack1), stack1.data[stack1.top]);
    printf("Stack 2: Bottom = %d, Top = %d\n", getBottom(&stack2), stack2.data[stack2.top]);

    return 0;
}
